; -*- mode: emacs-lisp -*-

;; jun's_emacs_file --- Summary
;; Jun Go gojun077@gmail.com
;; Last Updated 2020.01.14
;; Mac OS version

;;; Commentary:
;;  I have defined a custom function 'gojun-pkglist-installed-p' that
;;  will check if certain Emacs packages are installed.  If not found
;;  Emacs will automatically download them from melpa/marmalade and
;;  install them.  This conf file also includes some tweaks for Korean
;;  language support.

;;; Code:
(require 'package)
(package-initialize)
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/") t)
(add-to-list 'load-path "~/.emacs.d/elpa") ;;personal elisp libs

(require 'cl)
(defvar gojun-pkglist
  '(ansible
    color-theme-sanityinc-solarized
    exec-path-from-shell  ; fix $PATH env var on MacOS for flycheck
    fill-column-indicator
    flycheck
    flycheck-pyflakes
    flycheck-gometalinter
    go-mode
    go-playground
    magit
    markdown-mode
    paredit
    racket-mode
    realgud
    unicode-whitespace
    visual-fill-column
    web-mode
    yaml-mode)
  "List of packages to ensure are installed at launch.")

(defun gojun-pkglist-installed-p ()
  (loop for p in gojun-pkglist
        when (not (package-installed-p p)) do (return nil)
        finally (return t)))

(unless (gojun-pkglist-installed-p)
  ;; check for new packages (package versions)
  (message "%s" "Emacs is now refreshing its package database...")
  (package-refresh-contents)
  (message "%s" " done.")
  ;; install the missing packages
  (dolist (p gojun-pkglist)
    (when (not (package-installed-p p))
      (package-install p))))

(provide 'gojun-pkglist)


;; setting below to fix $PATH env var on MacOS X
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))

;; require declarations
(require 'flycheck)
(require 'flycheck-pyflakes)
(require 'unicode-whitespace)
(require 'whitespace)


;; turn on flychecking globally
(add-hook 'after-init-hook #'global-flycheck-mode)
(add-hook 'python-mode-hook 'flycheck-mode)

;; make #! script files executable on save (chmod +x)
(add-hook 'after-save-hook 'executable-make-buffer-file-executable-if-script-p)

;; unicode-whitespace face settings
(unicode-whitespace-setup 'subdued-faces)


(defun go-mode-setup ()
  ;; run 'go fmt' on .go source files before save
  (add-hook 'before-save-hook 'gofmt-before-save)
  ;; customize compile command to run go build
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
           "env GOOS=darwin GOARCH=amd64 go build -v && go test -v && go vet"))
)
(add-hook 'go-mode-hook 'go-mode-setup)


;; mode settings
; show col and line numbers
(column-number-mode 1)
; don't show menu bar
(menu-bar-mode 0)

; don't show scrollbar
(scroll-bar-mode 0)
; highlight parens
(show-paren-mode t)
; don't show toolbar
(tool-bar-mode 0)

;; Font settings
; the following requires cask 'font-monofur-nerd-font-mono'
(set-face-attribute 'default nil :font "Monofur Nerd Font Mono")
(set-face-attribute 'default nil :height 160)


;;=========================
;;   CUSTOM MENU OPTIONS
;;=========================

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("4cf3221feff536e2b3385209e9b9dc4c2e0818a69a1cdb4b522756bcdf4e00a4" default)))
 '(epg-gpg-program "/usr/local/MacGPG2/bin/gpg2")
 '(package-selected-packages
   (quote
    (unicode-whitespace exec-path-from-shell yaml-mode web-mode rw-language-and-country-codes rw-ispell rw-hunspell racket-mode paredit markdown-mode flycheck fill-column-indicator color-theme-sanityinc-solarized auctex ansible))))
 '(package-selected-packages
   (quote
    (web-mode ein yaml-mode rw-language-and-country-codes racket-mode paredit markdown-mode flycheck fill-column-indicator color-theme-sanityinc-solarized ansible)))
 '(python-shell-completion-native-disabled-interpreters (quote ("pypy ipython")))



;;======================
;;   GLOBAL VARIABLES
;;======================

; Use spaces instead of tabs
(setq-default indent-tabs-mode nil)
; But when I must use TAB, set width to 4 chars
(setq-default tab-width 4)
; formatting for C code
(setq c-default-style "linux" c-basic-offset 4)
; shell script mode formatting
(setq sh-basic-offset 2)
(setq sh-indentation 2)
; Python settings
; Note: recent versions of ipython and python interpreters
; don't support readline() and doctests do not show up
; in the emacs inferior process running python/ipython.
; For the time being, run python from CLI as follows:
;
; python -m doctest myprog.py -v
;
(setq python-shell-completion-native nil)
(setq python-shell-interpreter "/Library/Frameworks/Python.framework/Versions/3.8/bin/ipython3"
      python-shell-interpreter-args "--simple-prompt -i --pprint")
(setq ansi-color-for-comint-mode t)
(setq python-check-command "/Library/Frameworks/Python.framework/Versions/3.8/bin/pyflakes")
(setq flycheck-python-pyflakes-executable "/Library/Frameworks/Python.framework/Versions/3.8/bin/pyflakes")

; C-\ language toggle
(setq default-input-method "korean-hangul")
; Start emacs maximized
(setq initial-frame-alist (quote ((fullscreen . maximized))))
; create backups in $HOME/tmp
; bkup files will have '!' in place of directory separator '/'
(setq backup-directory-alist '(("." . "~/tmp")))
; Enable temp files and autosaving
(setq make-backup-files t)
(setq auto-save-default t)

; Enable C-l, C-u change region to lower/upper case
(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)
; Enable ido-mode
(ido-mode 1)
; enable ido flex matching
(setq ido-enable-flex-matching t)
; enable ido everywhere
(setq ido-everywhere t)
; use xetex to render pdf from LaTeX
(setq TeX-engine 'xetex)

; set PATH for emacs shell
(setenv "PATH" (concat (getenv "PATH") ":/usr/local/go/bin:$HOME/go/bin"))
; set exec-path for emacs to include GOLANG binaries
(setq exec-path (append exec-path '("/usr/local/go/bin" "$HOME/go/bin")))

; bind 'M-x magit-status' to 'C-x g'
(global-set-key (kbd "C-x g") 'magit-status)


(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Commands to run when Emacs launched in graphical mode
(when (display-graphic-p)
; only run whitespace mode in graphical session
  (global-whitespace-mode 1)
  (load-theme 'sanityinc-solarized-light))

;; Commands to run when Emacs launched in terminal mode
(unless (display-graphic-p)
  (load-theme 'adwaita))

(server-start)  ; emacsclient will open files in emacs session
(provide '.emacs)
;;; .emacs ends here
