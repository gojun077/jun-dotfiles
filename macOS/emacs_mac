; -*- mode: emacs-lisp -*-

;; .emacs for MacOS --- Summary
;; Created on: sometime in Winter 2019
;; Created by: gopeterjun@naver.com
;; Last Updated Oct 17 2023


;;; Code:
(require 'package)

;; Add package archives
(setq package-archives
      '(("melpa" . "http://melpa.org/packages/")
        ("gnu" . "http://elpa.gnu.org/packages/")))

;; List of packages to ensure are installed
(defvar gojun-pkglist
  '(ansible
    blacken
    solarized-theme
    exec-path-from-shell
    flycheck
    flycheck-mypy
    flymake-go
    flymake-hadolint
    flymake-racket
    flymake-ruff
    flymake-shellcheck
    go-mode
    go-playground
    groovy-mode
    jenkinsfile-mode
    magit
    markdown-mode
    org-trello
    rainbow-delimiters
    racket-mode
    realgud
    smartparens
    terraform-mode
    unicode-whitespace
    visual-fill-column
    web-mode
    yaml-mode))

;; Initialize the package system
(unless (bound-and-true-p package--initialized)
  (package-initialize))

;; Check and install missing packages
(dolist (pkg gojun-pkglist)
  (unless (package-installed-p pkg)
    (unless (assoc pkg package-archive-contents)
      (package-refresh-contents))
    (package-install pkg)))


;; require declarations
(require 'flycheck)
(require 'flycheck-mypy)
(require 'org-trello)
(require 'unicode-whitespace)
(require 'whitespace)


;; turn on flychecking globally
(add-hook 'after-init-hook #'global-flycheck-mode)
(add-hook 'python-mode-hook #'flycheck-mode)

;; make #! script files executable on save (chmod +x)
(add-hook 'after-save-hook 'executable-make-buffer-file-executable-if-script-p)

;; unicode-whitespace face settings
(unicode-whitespace-setup 'subdued-faces)

;; enable whitespace-mode for all files
(add-hook 'after-change-major-mode-hook 'whitespace-mode)

;; hooks for racket-mode
(add-hook 'racket-mode-hook #'rainbow-delimiters-mode)
(add-hook 'racket-mode-hook #'smartparens-mode)

(defun go-mode-setup ()
  ;; run 'go fmt' on .go source files before save
  (add-hook 'before-save-hook 'gofmt-before-save)
  ;; customize compile command to run go build
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
           "env GOOS=darwin GOARCH=amd64 go build -v -o bin/$(basename $(pwd)) && go test -v && go vet"))
)
(add-hook 'go-mode-hook 'go-mode-setup)

;; hook for terraform buffers
(add-hook 'terraform-mode-hook #'terraform-format-on-save-mode)


;; mode settings
; show col and line numbers
(column-number-mode 1)
; don't show menu bar
;(menu-bar-mode 0)

; don't show scrollbar
(scroll-bar-mode 0)
; highlight parens
(show-paren-mode t)
; don't show toolbar
(tool-bar-mode 0)
; Enable ido-mode
(ido-mode 1)

;; Font settings
;; monofur on MacOS requires cask 'font-monofur-nerd-font-mono'
(let ((fontset "fontset-default"))
  (set-fontset-font fontset 'latin
                    '("Monofur Nerd Font Mono" . "unicode-bmp"))
  (set-fontset-font fontset 'hangul
                    '("NanumGothic" . "unicode-bmp"))
  (set-face-attribute 'default nil
                      :font fontset
                      :height 170))


;;=========================
;;   CUSTOM MENU OPTIONS
;;=========================

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '("4cf3221feff536e2b3385209e9b9dc4c2e0818a69a1cdb4b522756bcdf4e00a4" default))
 '(epg-gpg-program "/usr/local/MacGPG2/bin/gpg2")
 '(package-selected-packages
   '(org-trello flymake-racket flymake-hadolint flymake-ruff flymake-go exec-path-from-shell solarized-theme blacken flycheck-mypy jenkinsfile-mode terraform-mode go-mode go-playground rainbow-delimiters magit smartparens web-mode ein yaml-mode rw-language-and-country-codes racket-mode paredit markdown-mode flycheck fill-column-indicator color-theme-sanityinc-solarized ansible))
 '(python-shell-completion-native-disabled-interpreters '("pypy ipython")))


;;======================
;;   GLOBAL VARIABLES
;;======================

;; run emacs in server mode - connect to server with `emacsclient`
(server-mode 1)
;; limit line length
(setq whitespace-line-column 80)
;; set fill column to 75
(setq-default fill-column 75)
;; enable native fill column indicator (included in emacs v27+)
(global-display-fill-column-indicator-mode 1)

; Use spaces instead of tabs
(setq-default indent-tabs-mode nil)
; But when I must use TAB, set width to 4 chars
(setq-default tab-width 4)
; formatting for C code
(setq c-default-style "linux" c-basic-offset 4)
; shell script mode formatting
(setq sh-basic-offset 2)
(setq sh-indentation 2)
; Python settings
; Note: recent versions of ipython and python interpreters
; don't support readline() and doctests do not show up
; in the emacs inferior process running python/ipython.
; For the time being, run python from CLI as follows:
;
; python -m doctest myprog.py -v
;
(setq python-shell-completion-native nil)
(setq python-shell-interpreter "~/.pyenv/shims/ipython"
      python-shell-interpreter-args "--simple-prompt -i --pprint")
(setq ansi-color-for-comint-mode t)
(setq python-check-command "/usr/local/bin/ruff")

; C-\ language toggle
(setq default-input-method "korean-hangul")
; Start emacs maximized
(setq initial-frame-alist (quote ((fullscreen . maximized))))
; create backups in $HOME/tmp
; bkup files will have '!' in place of directory separator '/'
(setq backup-directory-alist '(("." . "~/tmp")))
; Enable temp files and autosaving
(setq make-backup-files t)
(setq auto-save-default t)

; Enable C-l, C-u change region to lower/upper case
(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)

; enable ido flex matching
(setq ido-enable-flex-matching t)
; enable ido everywhere
(setq ido-everywhere t)
; use xetex to render pdf from LaTeX
(setq TeX-engine 'xetex)

; set PATH for emacs shell
(setenv "PATH" (concat (getenv "PATH") ":/usr/local/go/bin:$HOME/go/bin"))
; set exec-path for emacs to include GOLANG binaries
(setq exec-path (append exec-path '("/usr/local/go/bin" "$HOME/go/bin")))
(setq exec-path (append exec-path '("$HOME/.ghcup/bin")))

; org-mode settings
(setq org-todo-keywords
      '((sequence "TODO" "Inbox" "Anywhere" "Read/Review" "Calls"
                  "Computer" "Errands" "Home" "Office" "Waiting For" "|"
                  "DONE" "Completed" "Canceled")))

; bind 'M-x magit-status' to 'C-x g'
(global-set-key (kbd "C-x g") 'magit-status)


(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Commands to run when Emacs launched in graphical mode
(when (display-graphic-p)
; only run whitespace mode in graphical session
  (global-whitespace-mode 1))

;; Commands to run when Emacs launched in terminal mode
(unless (display-graphic-p)
  (load-theme 'adwaita))

(server-start)  ; emacsclient will open files in emacs session
(provide '.emacs)
;;; .emacs ends here
